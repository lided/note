import{_ as s,c as t,o as i,ag as e}from"./chunks/framework.DPDPlp3K.js";const l="/assets/Pasted%20image%2020240220211223.laQoulTD.png",n="/assets/Pasted%20image%2020240220211338.CrnG1Yvc.png",h="/assets/Pasted%20image%2020240220215046.CYTkj5gr.png",r="/assets/Pasted%20image%2020240220215144.CnGK-rs4.png",d="/assets/Pasted%20image%2020240220215215.DtVPxA9v.png",p="/assets/Pasted%20image%2020240220214102.Bd_NTAnp.png",k="/assets/Pasted%20image%2020240220215951.2mj5zKmy.png",o="/assets/Pasted%20image%2020240220220922.B5yYFwof.png",g="/assets/Pasted%20image%2020240312190927.D2KfZLTT.png",c="/assets/Pasted%20image%2020240221171555.BQ3GvES5.png",f=JSON.parse('{"title":"常见索引结构","description":"","frontmatter":{},"headers":[],"relativePath":"database/mysql/索引.md","filePath":"database/mysql/索引.md"}'),m={name:"database/mysql/索引.md"};function y(u,a,b,E,q,_){return i(),t("div",null,a[0]||(a[0]=[e('<h1 id="常见索引结构" tabindex="-1">常见索引结构 <a class="header-anchor" href="#常见索引结构" aria-label="Permalink to &quot;常见索引结构&quot;">​</a></h1><p><img src="'+l+'" alt=""></p><p><img src="'+n+'" alt=""></p><h2 id="b-tree" tabindex="-1">B Tree <a class="header-anchor" href="#b-tree" aria-label="Permalink to &quot;B Tree&quot;">​</a></h2><p><img src="'+h+'" alt=""></p><h2 id="b-tree-1" tabindex="-1">B+ Tree <a class="header-anchor" href="#b-tree-1" aria-label="Permalink to &quot;B+ Tree&quot;">​</a></h2><p><img src="'+r+'" alt=""></p><p>MySQL索引数据结构对经典的B+Tree进行了优化。在原B+Tree的基础上,增加一个指向相邻叶子节点的链表指针,就形成了带有顺序指针的B+Tree,提高区间访问的性能。</p><p><img src="'+d+'" alt=""></p><h2 id="hash" tabindex="-1">Hash <a class="header-anchor" href="#hash" aria-label="Permalink to &quot;Hash&quot;">​</a></h2><ul><li>只能精确匹配,不能范围查询</li><li>无法排序</li><li>查询效率通常比B+高</li></ul><p><img src="'+p+'" alt=""></p><h2 id="为什么mysql使用b" tabindex="-1">为什么mysql使用B+ <a class="header-anchor" href="#为什么mysql使用b" aria-label="Permalink to &quot;为什么mysql使用B+&quot;">​</a></h2><ul><li>二叉树只有俩个分支,在数据量大的情况下层级过多导致效率变慢</li><li>B+ Tree将数据单独放在叶子节点中,相比与B Tree树节点可以存放更多指针</li><li>B+Tree在叶子节点中对所有数据进行排序,有利于排序,范围查询</li><li>hash只能精确查询</li></ul><h1 id="索引类型" tabindex="-1">索引类型 <a class="header-anchor" href="#索引类型" aria-label="Permalink to &quot;索引类型&quot;">​</a></h1><p><img src="'+k+'" alt=""></p><p>在InnoDB中,根据存储形式又可区分为</p><ul><li><strong>聚集索引</strong> 索引中存放的数据为行数据,有且仅有一个</li><li><strong>二级索引(辅助索引)</strong> 索引中存放的数据为主键</li></ul><p>聚集索引选取规则</p><p><img src="'+o+'" alt=""></p><h1 id="索引语法" tabindex="-1">索引语法 <a class="header-anchor" href="#索引语法" aria-label="Permalink to &quot;索引语法&quot;">​</a></h1><h6 id="创建索引" tabindex="-1">创建索引 <a class="header-anchor" href="#创建索引" aria-label="Permalink to &quot;创建索引&quot;">​</a></h6><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [unique | fulltext]? </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> on</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">col_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><ul><li>unique 唯一索引</li><li>fulltext 全文索引</li><li>不写为普通索引</li><li>多个&lt;col_name&gt;用逗号隔开</li><li>&lt;col_name(n)&gt;中的n是指将字段前n为作为索引,不写(n)为全部</li></ul><h6 id="查看索引" tabindex="-1">查看索引 <a class="header-anchor" href="#查看索引" aria-label="Permalink to &quot;查看索引&quot;">​</a></h6><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">show </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h6 id="删除索引" tabindex="-1">删除索引 <a class="header-anchor" href="#删除索引" aria-label="Permalink to &quot;删除索引&quot;">​</a></h6><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">drop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> on</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h1 id="explain" tabindex="-1">explain <a class="header-anchor" href="#explain" aria-label="Permalink to &quot;explain&quot;">​</a></h1><p>在sql语句前加上explain关键字,查看当前sql执行计划(不会执行sql)</p><p><img src="'+g+'" alt=""></p><table tabindex="0"><thead><tr><th style="text-align:center;">字段名</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center;">id</td><td>执行顺序,id越大先执行</td></tr><tr><td style="text-align:center;">select_type</td><td>查询类型</td></tr><tr><td style="text-align:center;">table</td><td>表名</td></tr><tr><td style="text-align:center;">partitions</td><td>分区信息</td></tr><tr><td style="text-align:center;">type</td><td>访问方法</td></tr><tr><td style="text-align:center;">possible_keys</td><td>可能用到的index</td></tr><tr><td style="text-align:center;">key</td><td>实际用到的index</td></tr><tr><td style="text-align:center;">key_len</td><td>实际用到的index长度</td></tr><tr><td style="text-align:center;">ref</td><td></td></tr><tr><td style="text-align:center;">rows</td><td>预估记录数</td></tr><tr><td style="text-align:center;">filtered</td><td>符合条件的记录/查询到的记录(百分比)</td></tr><tr><td style="text-align:center;">extra</td><td>额外信息</td></tr></tbody></table><h1 id="索引使用注意事项" tabindex="-1">索引使用注意事项 <a class="header-anchor" href="#索引使用注意事项" aria-label="Permalink to &quot;索引使用注意事项&quot;">​</a></h1><h2 id="最左前缀法则" tabindex="-1">最左前缀法则 <a class="header-anchor" href="#最左前缀法则" aria-label="Permalink to &quot;最左前缀法则&quot;">​</a></h2><p>假设有一个联合a,b,c三个字段的联合索引 idx_a_b_c</p><p>在查询sql中,a,b,c从左到右第一个不存在的字段后面都不会被索引</p><p>eg: select * from table where a=? and c = ?;</p><p>只有a字段会被索引</p><h2 id="导致索引失效" tabindex="-1">导致索引失效 <a class="header-anchor" href="#导致索引失效" aria-label="Permalink to &quot;导致索引失效&quot;">​</a></h2><ul><li>在索引字段上进行运算</li><li>字符串类型不用引号&#39;&#39;</li><li>头部(左边)模糊匹配</li><li>or 连接的俩个条件只要有一个没有索引都会失效</li><li>mysql评估认为索引性能不如全表</li></ul><h2 id="覆盖索引-回表索引" tabindex="-1">覆盖索引&amp;回表索引 <a class="header-anchor" href="#覆盖索引-回表索引" aria-label="Permalink to &quot;覆盖索引&amp;回表索引&quot;">​</a></h2><ul><li><strong>覆盖索引</strong> 需要查询的字段在索引中存在,索引完成后可直接返回</li><li><strong>回表索引</strong> 索引后还需再次查询获得其他字段</li></ul><h2 id="sql提示" tabindex="-1">SQL提示 <a class="header-anchor" href="#sql提示" aria-label="Permalink to &quot;SQL提示&quot;">​</a></h2><p>在sql中指定索引</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;table&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ use | ignore | force ] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">index_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...;</span></span></code></pre></div><ul><li>use 建议使用该索引</li><li>ignore 忽略不使用该索引</li><li>force 强制使用该索引</li></ul><h1 id="索引设计原则" tabindex="-1">索引设计原则 <a class="header-anchor" href="#索引设计原则" aria-label="Permalink to &quot;索引设计原则&quot;">​</a></h1><p><img src="'+c+'" alt=""></p>',48)]))}const D=s(m,[["render",y]]);export{f as __pageData,D as default};
