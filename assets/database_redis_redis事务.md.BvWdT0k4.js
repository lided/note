import{_ as s,c as e,o as t,ag as n}from"./chunks/framework.DPDPlp3K.js";const u=JSON.parse('{"title":"简介","description":"","frontmatter":{},"headers":[],"relativePath":"database/redis/redis事务.md","filePath":"database/redis/redis事务.md"}'),p={name:"database/redis/redis事务.md"};function i(l,a,c,d,o,h){return t(),e("div",null,a[0]||(a[0]=[n(`<h1 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h1><p>与之前myql事务不同,当事务开启后会将所有操作存放到队列中一次性执行,并且出错后不能回滚</p><h1 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h1><p>使用multi命令开启事务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>multi</span></span></code></pre></div><p>输入命令...</p><p>输入exec执行队列中全部命令结束事务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>exec</span></span></code></pre></div><h1 id="错误处理" tabindex="-1">错误处理 <a class="header-anchor" href="#错误处理" aria-label="Permalink to &quot;错误处理&quot;">​</a></h1><p>主动放弃事务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>discard</span></span></code></pre></div><p>在事务中如果有语法等编译错误,执行exec命令时所有命令都无法正常运行</p><p>如果不是语法错误,例如:incr一个非数字值那么执行exec命令后改命令会报错,事务中其他命令正常执行</p><h1 id="watch监控" tabindex="-1">watch监控 <a class="header-anchor" href="#watch监控" aria-label="Permalink to &quot;watch监控&quot;">​</a></h1><p>乐观锁实现</p><p>使用watch命令监控某一数据</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>set k 1</span></span>
<span class="line"><span>watch k</span></span></code></pre></div><p>开启事务修改k</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>multi</span></span>
<span class="line"><span>set k 2</span></span></code></pre></div><p>如果在还没执行exec命令时k被其他人修改,那么执行exec就会报以下错误</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>127.0.0.1:6379(TX)&gt; exec</span></span>
<span class="line"><span>(nil)</span></span></code></pre></div><p>并且该事务队列中其他命令也会失败</p><p>取消监控<strong>unwatch</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>set b 1</span></span>
<span class="line"><span>watch b</span></span>
<span class="line"><span>unwatch</span></span></code></pre></div>`,24)]))}const b=s(p,[["render",i]]);export{u as __pageData,b as default};
